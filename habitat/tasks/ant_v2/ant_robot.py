import magnum as mn
import numpy as np

import math

from habitat.tasks.ant_v2.quadruped_wrapper import (
    QuadrupedRobot,
    QuadrupedRobotParams,
    RobotCameraParams,
)

gait_end_effector_positions = {
    0: [0.7291038632392883, -0.5224133133888245, -0.5836010575294495, 0.6227777600288391, -0.3791966736316681, 0.857604444026947, -0.6096131205558777, -0.4704127013683319, 0.7688754200935364, -0.8515937924385071, -0.39475056529045105, -0.6519139409065247],
    1: [0.6330735683441162, -0.5328327417373657, -0.6507983803749084, 0.7286503314971924, -0.3624453544616699, 0.790945827960968, -0.6849522590637207, -0.4987384080886841, 0.6693738698959351, -0.7593921422958374, -0.372686505317688, -0.7817557454109192],
    2: [0.5593228340148926, -0.5164467096328735, -0.7412090301513672, 0.8648433685302734, -0.3337240517139435, 0.6677490472793579, -0.7642686367034912, -0.5069749355316162, 0.5674502849578857, -0.6612052917480469, -0.33660516142845154, -0.8926103115081787],
    3: [0.4665489196777344, -0.513043999671936, -0.807937502861023, 0.9677023887634277, -0.30891141295433044, 0.5119282603263855, -0.8088470697402954, -0.5225346088409424, 0.45153337717056274, -0.5424909591674805, -0.31968918442726135, -0.971566915512085],
    4: [0.39277005195617676, -0.5335919260978699, -0.8080612421035767, 0.9839663505554199, -0.3202691674232483, 0.44535335898399353, -0.8051286935806274, -0.5369831919670105, 0.3926158547401428, -0.4694035053253174, -0.33320605754852295, -0.9909294843673706],
    5: [0.33675074577331543, -0.539379358291626, -0.8087128400802612, 0.9875872135162354, -0.332832396030426, 0.40087729692459106, -0.8173023462295532, -0.5373210906982422, 0.3450758159160614, -0.40413999557495117, -0.3353726267814636, -1.0068951845169067],
    6: [0.24666476249694824, -0.5301594138145447, -0.8331900835037231, 1.0075366497039795, -0.3295271396636963, 0.2951471507549286, -0.8380482196807861, -0.5316244959831238, 0.2423485666513443, -0.25986337661743164, -0.32775068283081055, -1.030965805053711],
    7: [0.18987202644348145, -0.5240563750267029, -0.8426284193992615, 1.0184121131896973, -0.3189024329185486, 0.19155263900756836, -0.8495385646820068, -0.5215153098106384, 0.20067740976810455, -0.20702099800109863, -0.33349454402923584, -1.0257322788238525],
    8: [0.18042206764221191, -0.5186358690261841, -0.8468461036682129, 1.0133867263793945, -0.3227895200252533, 0.16407224535942078, -0.8539607524871826, -0.5199050903320312, 0.2049020230770111, -0.2168879508972168, -0.3473266661167145, -1.0162571668624878],
    9: [0.18909645080566406, -0.5043832063674927, -0.8624861240386963, 0.9941067695617676, -0.3494603633880615, 0.18520137667655945, -0.872502326965332, -0.5053371787071228, 0.21365143358707428, -0.23016738891601562, -0.37225252389907837, -0.9977254867553711],
    10: [0.2194986343383789, -0.48020830750465393, -0.8955447673797607, 0.9986481666564941, -0.3565610945224762, 0.24546432495117188, -0.9073163270950317, -0.4770462214946747, 0.23155911266803741, -0.2499222755432129, -0.39642271399497986, -0.9759047031402588],
    11: [0.25783681869506836, -0.46409618854522705, -0.9126650094985962, 0.9936821460723877, -0.36945557594299316, 0.28591710329055786, -0.9289685487747192, -0.458035945892334, 0.2687762677669525, -0.289339542388916, -0.40759748220443726, -0.9616767168045044],
    12: [0.3261852562427521, -0.44489607214927673, -0.9203409552574158, 0.9479502439498901, -0.42159304022789, 0.34351691603660583, -0.9364854097366333, -0.44166848063468933, 0.3447200059890747, -0.3654177486896515, -0.41863277554512024, -0.9358589053153992],
    13: [0.42877745628356934, -0.4364083409309387, -0.9082573652267456, 0.865325927734375, -0.4756765365600586, 0.4334588348865509, -0.9235037565231323, -0.42151176929473877, 0.4579732120037079, -0.4668886661529541, -0.4361644387245178, -0.8968898057937622],
    14: [0.5513014793395996, -0.41253286600112915, -0.8791345357894897, 0.7952926158905029, -0.4897710680961609, 0.5393967032432556, -0.8944005966186523, -0.3951336145401001, 0.5758249759674072, -0.554595947265625, -0.46523576974868774, -0.8281477689743042],
    15: [0.6907394528388977, -0.373999685049057, -0.8210627436637878, 0.7315078377723694, -0.484758585691452, 0.6471315026283264, -0.8349481225013733, -0.36447176337242126, 0.7101319432258606, -0.6373298764228821, -0.506157398223877, -0.7124814391136169],
    16: [0.7645604610443115, -0.3631499409675598, -0.764098048210144, 0.6760249137878418, -0.49901992082595825, 0.6903484463691711, -0.7767331600189209, -0.3543625473976135, 0.7873766422271729, -0.6863665580749512, -0.515684187412262, -0.6442821025848389],
    17: [0.8207657337188721, -0.36438989639282227, -0.7004734873771667, 0.6112065315246582, -0.5162402391433716, 0.7219695448875427, -0.7134366035461426, -0.3473931550979614, 0.8508709669113159, -0.7299063205718994, -0.5172818899154663, -0.5895716547966003],
    18: [0.9429187774658203, -0.34169870615005493, -0.5284643173217773, 0.45107102394104004, -0.5284305214881897, 0.7974925637245178, -0.539114236831665, -0.3251848816871643, 0.9713958501815796, -0.8093209266662598, -0.5208149552345276, -0.446760892868042],
    19: [1.0014142990112305, -0.31827056407928467, -0.4006223678588867, 0.33557558059692383, -0.5306651592254639, 0.8274561762809753, -0.4202704429626465, -0.3131786584854126, 1.0164563655853271, -0.8271822929382324, -0.5292516946792603, -0.3503485918045044],
    20: [1.0060914754867554, -0.32359960675239563, -0.3633282482624054, 0.30645111203193665, -0.5328423380851746, 0.8272308707237244, -0.3892345726490021, -0.3167112171649933, 1.0207858085632324, -0.8215888142585754, -0.5344513058662415, -0.32590678334236145],
    21: [1.0065933465957642, -0.33871057629585266, -0.2969697415828705, 0.2691972553730011, -0.5335329174995422, 0.8303319811820984, -0.31497958302497864, -0.3278869688510895, 1.0282338857650757, -0.8356755375862122, -0.5312715172767639, -0.26952800154685974],
    22: [1.0085723400115967, -0.3430140018463135, -0.20332837104797363, 0.20894265174865723, -0.5227093696594238, 0.8482869267463684, -0.2065904140472412, -0.3382377624511719, 1.0271165370941162, -0.8548436164855957, -0.5200704336166382, -0.19079828262329102],
    23: [1.0068864822387695, -0.34324610233306885, -0.1791630983352661, 0.18160128593444824, -0.5129637718200684, 0.8589538931846619, -0.18386340141296387, -0.34597790241241455, 1.0192055702209473, -0.8628838062286377, -0.5124708414077759, -0.17793798446655273],
    24: [0.9959690570831299, -0.3575190305709839, -0.1991788148880005, 0.1877596378326416, -0.5026440620422363, 0.8702688813209534, -0.21036744117736816, -0.3630516529083252, 1.0063564777374268, -0.874361515045166, -0.5020797252655029, -0.20056140422821045],
    25: [0.9769680500030518, -0.3774397373199463, -0.2388085126876831, 0.21999835968017578, -0.4927859306335449, 0.8852370381355286, -0.25003862380981445, -0.3869236707687378, 0.9902283549308777, -0.8929452896118164, -0.48526620864868164, -0.2383887767791748],
    26: [0.9545621871948242, -0.39564239978790283, -0.29086220264434814, 0.27271175384521484, -0.4717622995376587, 0.9051553606987, -0.29259371757507324, -0.4155653715133667, 0.963774561882019, -0.9143118858337402, -0.46261274814605713, -0.2818470001220703],
    27: [0.9215555191040039, -0.41086238622665405, -0.37634730339050293, 0.3629157543182373, -0.4369298815727234, 0.9227831959724426, -0.37123870849609375, -0.4509432911872864, 0.9167798161506653, -0.9274113178253174, -0.43644410371780396, -0.3671882152557373],
    28: [0.8890808820724487, -0.42101049423217773, -0.4442365765571594, 0.4380344748497009, -0.4150000810623169, 0.9189953804016113, -0.4426366686820984, -0.4664109945297241, 0.8785199522972107, -0.919662594795227, -0.42017650604248047, -0.44873887300491333],
    29: [0.8546597957611084, -0.43210458755493164, -0.49637794494628906, 0.49875926971435547, -0.3989565968513489, 0.9077895879745483, -0.5063252449035645, -0.47718507051467896, 0.8384392261505127, -0.9018025398254395, -0.40332233905792236, -0.5288783311843872],
}

gait_joint_velocities = {
    0: [-4.988156318664551, -3.7366931438446045, -3.6637587547302246, 0.6364984512329102, 4.232092380523682, 0.8888942003250122, 4.8210673332214355, -0.5145984888076782],
    1: [-5.0526041984558105, 0.4164814352989197, -5.83003568649292, 1.5764487981796265, 5.433776378631592, -0.5120911598205566, 5.234935760498047, -1.785961627960205],
    2: [-4.30476188659668, 1.7543832063674927, -6.252029895782471, 1.88347327709198, 4.799628257751465, 0.39118948578834534, 4.176048755645752, -1.8282580375671387],
    3: [-2.819058656692505, -0.776043176651001, -2.843284845352173, -0.18571102619171143, 2.4315390586853027, 1.5485364198684692, 2.374826192855835, 0.31603503227233887],
    4: [-3.475778102874756, -2.233593463897705, -1.9672424793243408, -1.2687008380889893, 2.3004586696624756, -0.05133461952209473, 2.4703688621520996, 0.8793113231658936],
    5: [-3.7876243591308594, 0.2970767319202423, -2.657489776611328, -0.6567106246948242, 3.61582612991333, -0.08576291799545288, 3.81310772895813, -0.05602724105119705],
    6: [-2.645069122314453, 0.48003679513931274, -3.392879009246826, 0.6641008257865906, 2.9342703819274902, -0.400238960981369, 2.909456729888916, -0.30316048860549927],
    7: [-0.9937915205955505, 0.2678089141845703, -1.9842008352279663, -0.15717807412147522, -0.15800833702087402, -0.26705464720726013, -0.45867735147476196, 0.8553012013435364],
    8: [-0.09374493360519409, 0.5562019944190979, -0.16137808561325073, -1.1873185634613037, -0.6337551474571228, -0.6033899188041687, -0.8153109550476074, 1.3912250995635986],
    9: [0.9000298976898193, 1.272916316986084, 1.7783055305480957, -1.8160773515701294, -0.32064759731292725, -1.313146710395813, -0.21745207905769348, 1.4199461936950684],
    10: [1.146475076675415, 1.2381327152252197, 1.2871956825256348, 0.7846772074699402, -0.6796457171440125, -1.6774885654449463, -0.7383959293365479, 0.703404426574707],
    11: [1.975192666053772, 0.9854962825775146, 1.5702643394470215, -1.6273527145385742, -2.1216156482696533, -1.1599030494689941, -2.1334762573242188, 0.6343710422515869],
    12: [3.314606189727783, 1.1510310173034668, 3.137637138366699, -4.286322116851807, -3.582313060760498, -0.8337286710739136, -3.6265676021575928, 1.1482878923416138],
    13: [4.290897369384766, 1.5195986032485962, 4.805203437805176, -2.7301554679870605, -4.069682598114014, -1.1947413682937622, -3.8947973251342773, 0.5370820760726929],
    14: [4.420475006103516, 1.7150551080703735, 4.762022972106934, 0.2182953953742981, -3.986815929412842, -1.5950305461883545, -3.9790306091308594, 2.5700058937072754],
    15: [3.119565010070801, 0.8316748738288879, 2.6715917587280273, 0.1191866397857666, -3.1096889972686768, -0.8926143050193787, -3.30952787399292, 1.7037850618362427],
    16: [3.3412065505981445, 0.1321374773979187, 3.02956223487854, -1.6000556945800781, -3.5659403800964355, -0.23167994618415833, -3.3235206604003906, 0.2273932695388794],
    17: [5.108311653137207, 0.5260305404663086, 5.197383403778076, -1.8371474742889404, -5.343658924102783, -0.5533342957496643, -4.93727970123291, -0.04271794110536575],
    18: [5.009368419647217, 1.3478606939315796, 5.686129570007324, -0.23089350759983063, -4.671444892883301, -1.0394333600997925, -4.656569480895996, 0.35057079792022705],
    19: [1.9942259788513184, -0.14637091755867004, 2.218407154083252, -0.3095829486846924, -1.1557246446609497, 0.20508024096488953, -1.0568633079528809, 0.9778072834014893],
    20: [1.649693489074707, -1.0292913913726807, 1.3275374174118042, -0.6052845120429993, -1.5786643028259277, 0.6247368454933167, -1.6249730587005615, -0.16150474548339844],
    21: [2.783334732055664, -0.6846243143081665, 2.12813138961792, 0.36348819732666016, -3.3343865871429443, 0.44389691948890686, -3.3720641136169434, -0.5657612681388855],
    22: [1.5952045917510986, 0.036467887461185455, 1.7279804944992065, 0.7076754570007324, -1.7584333419799805, 0.19646713137626648, -1.623498558998108, -0.5401883125305176],
    23: [-0.18564876914024353, -0.5163416266441345, 0.33767169713974, 0.5865368843078613, 0.5367962718009949, 0.6312230825424194, 0.5584569573402405, -0.40500688552856445],
    24: [-1.1392959356307983, -1.324941635131836, -0.9474248290061951, 0.8345510959625244, 1.4263769388198853, 1.185248851776123, 1.2936949729919434, -0.9093756675720215],
    25: [-1.576290249824524, -1.4567428827285767, -1.7019976377487183, 1.3306564092636108, 1.352760672569275, 1.1405638456344604, 1.2490843534469604, -1.4636797904968262],
    26: [-2.2563133239746094, -1.1379196643829346, -2.3010311126708984, 1.5987985134124756, 1.8665053844451904, 1.7340104579925537, 1.7445138692855835, -1.5292571783065796],
    27: [-2.574357271194458, -0.6335124969482422, -2.405925989151001, 1.1324348449707031, 2.6165103912353516, 1.0956270694732666, 2.4796953201293945, -0.9989820718765259],
    28: [-3.060465097427368, -0.9577259421348572, -3.0605711936950684, 0.914238691329956, 3.341362476348877, 0.7821228504180908, 3.3365213871002197, -0.9686211943626404],
    29: [-4.295466899871826, -1.494964838027954, -4.184268951416016, 1.4810969829559326, 4.879284858703613, 1.2168344259262085, 4.973205089569092, -1.607519507408142],
}

gait_joint_targets = {
    0: [9.491012693391987e-17, -0.9274458343635984, 9.491012693391987e-17, -0.6125541656364015, 0.0, 0.9274458343635984, 0.0, 0.6125541656364015],
    1: [-0.16113156038376328, -0.9588643181007519, -0.16113156038376328, -0.581135681899248, 0.16113156038376347, 0.9588643181007519, 0.16113156038376347, 0.581135681899248],
    2: [-0.3152208983837452, -0.9820285248653551, -0.3152208983837452, -0.5579714751346448, 0.3152208983837451, 0.9820285248653551, 0.3152208983837451, 0.5579714751346448],
    3: [-0.4555335705266666, -0.9959260676675984, -0.4555335705266666, -0.5440739323324015, 0.4555335705266667, 0.9959260676675984, 0.4555335705266667, 0.5440739323324015],
    4: [-0.5759372397449803, -0.9999495571992145, -0.5759372397449803, -0.5400504428007855, 0.5759372397449805, 0.9999495571992145, 0.5759372397449805, 0.5400504428007855],
    5: [-0.6711696879329397, -0.9939231476608269, -0.6711696879329397, -0.5460768523391731, 0.67116968793294, 0.9939231476608269, 0.67116968793294, 0.5460768523391731],
    6: [-0.737068800128744, -0.9781102220671845, -0.737068800128744, -0.5618897779328156, 0.737068800128744, 0.9781102220671845, 0.737068800128744, 0.5618897779328156],
    7: [-0.7707544689104119, -0.9532018811455651, -0.7707544689104119, -0.5867981188544349, 0.7707544689104118, 0.9532018811455651, 0.7707544689104118, 0.5867981188544349],
    8: [-0.7707544689104119, -0.9202867389177243, -0.7707544689104119, -0.6197132610822758, 0.7707544689104119, 0.9202867389177243, 0.7707544689104119, 0.6197132610822758],
    9: [-0.7370688001287441, -0.8808033450433945, -0.7370688001287441, -0.6591966549566055, 0.7370688001287441, 0.8808033450433945, 0.7370688001287441, 0.6591966549566055],
    10: [-0.6711696879329403, -0.8364773132972286, -0.6711696879329403, -0.7035226867027715, 0.6711696879329401, 0.8364773132972286, 0.6711696879329401, 0.7035226867027715],
    11: [-0.5759372397449809, -0.7892459039664327, -0.5759372397449809, -0.7507540960335675, 0.5759372397449807, 0.7892459039664327, 0.5759372397449807, 0.7507540960335675],
    12: [-0.45553357052666676, -0.74117335628021, -0.45553357052666676, -0.7988266437197901, 0.45553357052666676, 0.74117335628021, 0.45553357052666676, 0.7988266437197901],
    13: [-0.3152208983837451, -0.6943606712501258, -0.3152208983837451, -0.8456393287498742, 0.31522089838374506, 0.6943606712501258, 0.31522089838374506, 0.8456393287498742],
    14: [-0.16113156038376322, -0.6508537878441801, -0.16113156038376322, -0.88914621215582, 0.16113156038376344, 0.6508537878441801, 0.16113156038376344, 0.88914621215582],
    15: [-1.8982025386783975e-16, -0.6125541656364016, -1.8982025386783975e-16, -0.9274458343635984, 9.491012693391987e-17, 0.6125541656364016, 9.491012693391987e-17, 0.9274458343635984],
    16: [0.16113156038376286, -0.5811356818992481, 0.16113156038376286, -0.9588643181007519, -0.16113156038376328, 0.5811356818992481, -0.16113156038376328, 0.9588643181007519],
    17: [0.3152208983837448, -0.557971475134645, 0.3152208983837448, -0.9820285248653551, -0.3152208983837449, 0.557971475134645, -0.3152208983837449, 0.9820285248653551],
    18: [0.45553357052666654, -0.5440739323324015, 0.45553357052666654, -0.9959260676675985, -0.4555335705266666, 0.5440739323324015, -0.4555335705266666, 0.9959260676675985],
    19: [0.57593723974498, -0.5400504428007855, 0.57593723974498, -0.9999495571992145, -0.5759372397449803, 0.5400504428007855, -0.5759372397449803, 0.9999495571992145],
    20: [0.6711696879329397, -0.5460768523391731, 0.6711696879329397, -0.9939231476608269, -0.6711696879329397, 0.5460768523391731, -0.6711696879329397, 0.9939231476608269],
    21: [0.7370688001287439, -0.5618897779328155, 0.7370688001287439, -0.9781102220671845, -0.737068800128744, 0.5618897779328155, -0.737068800128744, 0.9781102220671845],
    22: [0.7707544689104118, -0.5867981188544348, 0.7707544689104118, -0.9532018811455653, -0.7707544689104118, 0.5867981188544348, -0.7707544689104118, 0.9532018811455653],
    23: [0.7707544689104118, -0.6197132610822759, 0.7707544689104118, -0.9202867389177242, -0.7707544689104118, 0.6197132610822759, -0.7707544689104118, 0.9202867389177242],
    24: [0.7370688001287441, -0.6591966549566055, 0.7370688001287441, -0.8808033450433945, -0.7370688001287441, 0.6591966549566055, -0.7370688001287441, 0.8808033450433945],
    25: [0.6711696879329396, -0.7035226867027716, 0.6711696879329396, -0.8364773132972284, -0.67116968793294, 0.7035226867027716, -0.67116968793294, 0.8364773132972284],
    26: [0.5759372397449803, -0.7507540960335676, 0.5759372397449803, -0.7892459039664325, -0.5759372397449803, 0.7507540960335676, -0.5759372397449803, 0.7892459039664325],
    27: [0.4555335705266669, -0.79882664371979, 0.4555335705266669, -0.74117335628021, -0.45553357052666676, 0.79882664371979, -0.45553357052666676, 0.74117335628021],
    28: [0.3152208983837446, -0.8456393287498742, 0.3152208983837446, -0.6943606712501258, -0.3152208983837451, 0.8456393287498742, -0.3152208983837451, 0.6943606712501258],
    29: [0.16113156038376467, -0.8891462121558199, 0.16113156038376467, -0.6508537878441801, -0.16113156038376392, 0.8891462121558199, -0.16113156038376392, 0.6508537878441801],
}

gait_egocentric_linear_velocity = {
    0: [1.0786157846450806, -0.10050323605537415, 0.48175933957099915],
    1: [1.0288152694702148, -0.4207536578178406, 0.5834001302719116],
    2: [1.0824453830718994, -0.1482183039188385, 0.6955264210700989],
    3: [1.2464463710784912, 0.3742378354072571, 0.5339065790176392],
    4: [1.3294578790664673, 0.3068520128726959, 0.45821404457092285],
    5: [1.2717596292495728, 0.024425003677606583, 0.5747870206832886],
    6: [1.2280887365341187, -0.3982481062412262, 0.5443111062049866],
    7: [1.3027808666229248, -0.7373151183128357, 0.3415331244468689],
    8: [1.3470568656921387, -0.8274468183517456, 0.2455539107322693],
    9: [1.384267807006836, -1.0842885971069336, 0.21748816967010498],
    10: [1.078261375427246, -0.417885959148407, -0.02398000657558441],
    11: [0.9550177454948425, 0.2013057917356491, -0.34934020042419434],
    12: [0.9762024879455566, 0.33707621693611145, -0.627396285533905],
    13: [1.0658369064331055, 0.355720579624176, -0.689477801322937],
    14: [1.0401426553726196, 0.2580566108226776, -0.8049116730690002],
    15: [1.0208792686462402, 0.29634928703308105, -0.8329262137413025],
    16: [1.0500471591949463, 0.39857620000839233, -0.9302701354026794],
    17: [1.100898265838623, 0.503392219543457, -1.189826250076294],
    18: [1.191268801689148, 0.5017796754837036, -1.2528259754180908],
    19: [1.1894797086715698, 0.2863597571849823, -0.8615603446960449],
    20: [1.1542519330978394, 0.0778995007276535, -0.8144632577896118],
    21: [1.109727144241333, -0.05169341713190079, -0.9571859240531921],
    22: [1.108380913734436, -0.2878996431827545, -0.8255152106285095],
    23: [1.0904616117477417, -0.5163508057594299, -0.6007891893386841],
    24: [1.0512393712997437, -0.7495381236076355, -0.47531092166900635],
    25: [1.0601359605789185, -0.8792802095413208, -0.4843924939632416],
    26: [1.0533053874969482, -1.0473003387451172, -0.4340263605117798],
    27: [1.0842541456222534, -1.2030603885650635, -0.3827829957008362],
    28: [1.128435492515564, -1.333319067955017, -0.3228466212749481],
    29: [1.1796683073043823, -1.4692144393920898, -0.19743967056274414],
}

class AntV2Robot(QuadrupedRobot):
    def __init__(self, urdf_path, sim, limit_robo_joints=True, fixed_base=False):
        ant_params = QuadrupedRobotParams(
            hip_joints=[6, 11, 16, 1],
            ankle_joints=[8, 13, 18, 3],

            hip_init_params=[0,0,0,0],
            ankle_init_params=[-1,1,1,-1],

            cameras={
                "robot_arm": RobotCameraParams(
                    cam_offset_pos=mn.Vector3(0, 0.0, 0.1),
                    cam_look_at_pos=mn.Vector3(0.1, 0.0, 0.0),
                    attached_link_id=22,
                    relative_transform=mn.Matrix4.rotation_y(mn.Deg(-90))
                    @ mn.Matrix4.rotation_z(mn.Deg(90)),
                ),
                "robot_head": RobotCameraParams(
                    cam_offset_pos=mn.Vector3(0.17, 1.2, 0.0),
                    cam_look_at_pos=mn.Vector3(0.75, 1.0, 0.0),
                    attached_link_id=-1,
                ),
                "robot_third": RobotCameraParams(
                    cam_offset_pos=mn.Vector3(-5.5, 1.7, -0.5),
                    cam_look_at_pos=mn.Vector3(0.0, 1.0, 0.0),
                    attached_link_id=-1,
                ),
            },

            hip_mtr_pos_gain=0.1, # reactivity towards target position
            hip_mtr_vel_gain=0.1, # damping measure
            hip_mtr_max_impulse=10.0, # max force aloud in one physics timestep
            ankle_mtr_pos_gain=0.1,
            ankle_mtr_vel_gain=0.1,
            ankle_mtr_max_impulse=10.0,
            # can optimize with fixed base & random target joint positions
            # also should test on ground (ant shouldn't fling itself around)

            base_offset=mn.Vector3(0,0,0),
            base_link_names={
                "torso",
            },
        )
        self.physics_manager = sim.get_rigid_object_manager()
        super().__init__(ant_params, urdf_path, sim, limit_robo_joints, fixed_base)


    def reconfigure(self) -> None:
        super().reconfigure()

        # NOTE: this is necessary to set locked head and back positions
        self.update()

    def reset(self) -> None:
        super().reset()

        # NOTE: this is necessary to set locked head and back positions
        self.update()

    @property
    def base_transformation(self):
        """Get the robot base ground position via configured local offset from origin."""
        add_rot = mn.Matrix4.rotation(mn.Rad(-np.pi / 2), mn.Vector3(1.0, 0, 0))
        return self.sim_obj.transformation @ add_rot

    @base_transformation.setter
    def base_transformation(self, transform):
        """Set the robot base to a desired ground position (e.g. NavMesh point) via configured local offset from origin."""
        add_rot = mn.Matrix4.rotation(mn.Rad(np.pi / 2), mn.Vector3(1.0, 0, 0))
        self.sim_obj.transformation = transform @ add_rot


    def update(self):
        super().update()
        
    def natural_walking_gait_calculator_at(self, frame, ctrl_freq, ankle_amplitude, ankle_period_offset, leg_amplitude):
        """Compute a leg state vector for periodic motion at a given frame at a control frequency [0,1]."""
        # Simple walking pattern for the ant
        time = (frame % ctrl_freq) / ctrl_freq
        joint_state = np.zeros(8)
        joint_state[0] = leg_amplitude * (math.sin(math.pi + 2*math.pi*time))
        joint_state[2] = leg_amplitude * (math.sin(math.pi + 2*math.pi*time))
        joint_state[4] = leg_amplitude * (math.sin(2*math.pi*time))
        joint_state[6] = leg_amplitude * (math.sin(2*math.pi*time))
        
        ad1 = (1-ankle_amplitude)
        
        joint_state[1] = -(ankle_amplitude * (math.sin(math.pi/2 + ankle_period_offset*math.pi + 2*math.pi*time)) + ad1)
        joint_state[3] = -(ankle_amplitude * (math.sin(-math.pi/2 + ankle_period_offset*math.pi + 2*math.pi*time)) + ad1)
        joint_state[5] = ankle_amplitude * (math.sin(math.pi/2 + ankle_period_offset*math.pi + 2*math.pi*time)) + ad1
        joint_state[7] = ankle_amplitude * (math.sin(-math.pi/2 + ankle_period_offset*math.pi + 2*math.pi*time)) + ad1
        return joint_state
    
    def natural_walking_gait_at(self, frame, ctrl_freq, ankle_amplitude, ankle_period_offset, leg_amplitude):
        """Returns a leg state vector for periodic motion at a given frame at a control frequency [0,1]."""
        # Simple walking pattern for the ant
        if ctrl_freq == 30:
            return np.array(gait_joint_targets[frame % ctrl_freq])
        else:
            return natural_walking_gait_calculator_at(self, frame, ctrl_freq, ankle_amplitude, ankle_period_offset, leg_amplitude)

    
    def natural_gait_end_effector_position(self, frame):
        """Returns the end effector's positions for the natural gait. *Only works if Control Frequency is 30hz"""
        return np.array(gait_end_effector_positions[frame % 30])
        
    
    def natural_gait_joint_velocities(self, frame):
        """Returns the joint velocities for the natural gait. *Only works if Control Frequency is 30hz"""
        return np.array(gait_joint_velocities[frame % 30])
    
    def natural_gait_egocentric_linear_velocity(self, frame):
        """Returns the egocentric linear velocity for the natural gait. *Only works if Control Frequency is 30hz"""
        return np.array(gait_egocentric_linear_velocity[frame % 30])
    
    def egocentric_linear_velocity(self):
        bv = self.base_velocity
        egocentric_base_lin_vel = self.base_transformation.inverted().transform_vector(bv)
        return np.array(egocentric_base_lin_vel)
    
    def end_effector_positions(self):
        """Computes and returns the end effector's positions"""
        link_ids = [4, 9, 14, 19]
        link_local_ankles = [mn.Vector3(0.25, -0.25, 0), mn.Vector3(0.25,0.25,0.0), mn.Vector3(-0.25, 0.25, 0), mn.Vector3(-0.25,-0.25,0.0)]
        positions = []
        for i, link_id in enumerate(link_ids):
            link = self.sim_obj.get_link_scene_node(link_id)
            global_ankle_location = link.transformation_matrix().transform_point(link_local_ankles[i])
            egocentric_ankle_location = self.base_transformation.inverted().transform_point(global_ankle_location)
            positions.extend([x for x in list(egocentric_ankle_location)])
        return positions
    
    
